# .gitlab-ci.yml

stages:
  - lint
  - build
  - test
  - report

# 1. Линтинг HTML, CSS и JS
lint:
  stage: lint
  image: node:18
  script:
    - npm ci
    - npx htmlhint "**/*.html"
    - npx stylelint "**/*.css"
    - npx eslint "**/*.js"
  artifacts:
    reports:
      codequality: report/codequality-report.json
    paths:
      - report/codequality-report.json

# 2. Сборка (build snapshot)
build:
  stage: build
  image: node:18
  script:
    - npm ci
    - npm run build      # собирает артефакт в dist/
  artifacts:
    name: "snapshot-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 day
    paths:
      - dist/

# 3a. Юнит-тесты + покрытие (например, Jest)
unit_test:
  stage: test
  image: node:18
  script:
    - npm ci
    - npm run test:unit -- --coverage --coverageReporters=cobertura
  artifacts:
    reports:
      junit: junit/unit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
    paths:
      - coverage/
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)%/'

# 3b. Интеграционные тесты
integration_test:
  stage: test
  image: node:18
  script:
    - npm ci
    - npm run test:integration -- --reporter mocha-junit-reporter --reporter-options mochaFile=junit/integration.xml
  artifacts:
    reports:
      junit: junit/integration.xml

# 4. Финальный отчёт (необязательно)
report_summary:
  stage: report
  needs:
    - lint
    - unit_test
    - integration_test
  script:
    - echo "Все проверки пройдены"
  artifacts:
    when: always
    paths:
      - junit/
      - coverage/