#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ —Å–∏—Å—Ç–µ–º–µ.
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database import SessionLocal
import models
import auth
from datetime import datetime

def create_manager():
    """–°–æ–∑–¥–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ —Å–∏—Å—Ç–µ–º–µ"""
    db = SessionLocal()
    
    try:
        # –î–∞–Ω–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        manager_data = {
            "name": "–ú–µ–Ω–µ–¥–∂–µ—Ä",
            "phone": "+79999999999",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä
            "password": "admin123",
            "email": "manager@company.com",
            "department": "Operations"
        }
        
        print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
        print(f"üìù –ò–º—è: {manager_data['name']}")
        print(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {manager_data['phone']}")
        print(f"üîê –ü–∞—Ä–æ–ª—å: {manager_data['password']}")
        print(f"üìß Email: {manager_data['email']}")
        print(f"üè¢ –û—Ç–¥–µ–ª: {manager_data['department']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º
        existing_user = db.query(models.User).filter(
            models.User.phone == manager_data["phone"]
        ).first()
        
        if existing_user:
            print(f"‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–æ–º–µ—Ä–æ–º {manager_data['phone']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            print(f"   –ò–º—è: {existing_user.name}")
            print(f"   –†–æ–ª—å: {existing_user.role.value}")
            
            if existing_user.role == models.UserRole.manager:
                print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —É–∂–µ —Å–æ–∑–¥–∞–Ω!")
                return
            else:
                print("‚ùå –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∑–∞–Ω—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å –¥—Ä—É–≥–æ–π —Ä–æ–ª—å—é!")
                return
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        hashed_password = auth.get_password_hash(manager_data["password"])
        db_user = models.User(
            phone=manager_data["phone"],
            name=manager_data["name"],
            password_hash=hashed_password,
            role=models.UserRole.manager,
            created_at=datetime.utcnow()
        )
        db.add(db_user)
        db.flush()
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        manager_profile = models.ManagerProfile(
            user_id=db_user.id,
            email=manager_data["email"],
            department=manager_data["department"]
        )
        db.add(manager_profile)
        
        db.commit()
        db.refresh(db_user)
        
        print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"   ID: {db_user.id}")
        print(f"   –ò–º—è: {db_user.name}")
        print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {db_user.phone}")
        print(f"   Email: {manager_profile.email}")
        print(f"   –û—Ç–¥–µ–ª: {manager_profile.department}")
        print(f"   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {db_user.created_at}")
        
        print("\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
        print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {manager_data['phone']}")
        print(f"   –ü–∞—Ä–æ–ª—å: {manager_data['password']}")
        print(f"   URL: http://localhost:3001 (Manager Dashboard)")
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        db.close()

if __name__ == "__main__":
    create_manager() 