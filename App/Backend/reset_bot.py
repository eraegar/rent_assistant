#!/usr/bin/env python3
"""
–°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è Telegram –±–æ—Ç–∞
–£–¥–∞–ª—è–µ—Ç webhook –∏ –æ—á–∏—â–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
"""

import os
import requests
import time
from dotenv import load_dotenv

load_dotenv()

def reset_bot():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞"""
    token = os.getenv("BOT_TOKEN")
    
    if not token or token == "YOUR_BOT_TOKEN_HERE":
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    print(f"ü§ñ –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞...")
    print(f"üîë Token: {token[:10]}...")
    print("-" * 40)
    
    base_url = f"https://api.telegram.org/bot{token}"
    
    # 1. –£–¥–∞–ª—è–µ–º webhook
    try:
        print("üîÑ –£–¥–∞–ª–µ–Ω–∏–µ webhook...")
        response = requests.post(f"{base_url}/deleteWebhook", timeout=10)
        result = response.json()
        if result.get('ok'):
            print("‚úÖ Webhook —É–¥–∞–ª–µ–Ω")
        else:
            print(f"‚ö†Ô∏è  Webhook: {result.get('description', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {e}")
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –∏ –æ—á–∏—â–∞–µ–º –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    try:
        print("üîÑ –û—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        response = requests.post(f"{base_url}/getUpdates", 
                               json={"timeout": 1, "limit": 100}, 
                               timeout=15)
        result = response.json()
        
        if result.get('ok'):
            updates = result.get('result', [])
            print(f"üì• –ù–∞–π–¥–µ–Ω–æ {len(updates)} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
            
            if updates:
                # –ë–µ—Ä–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –¥–µ–ª–∞–µ–º offset
                last_update_id = updates[-1]['update_id']
                
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                response = requests.post(f"{base_url}/getUpdates", 
                                       json={"offset": last_update_id + 1, "timeout": 1}, 
                                       timeout=10)
                print("‚úÖ –û—á–µ—Ä–µ–¥—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—á–∏—â–µ–Ω–∞")
            else:
                print("‚úÖ –û—á–µ—Ä–µ–¥—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø—É—Å—Ç–∞")
        else:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {result.get('description')}")
            
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    try:
        print("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞...")
        response = requests.post(f"{base_url}/getMe", timeout=10)
        result = response.json()
        
        if result.get('ok'):
            bot_info = result.get('result', {})
            print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{bot_info.get('username')}")
            print(f"üìù –ò–º—è: {bot_info.get('first_name')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: {result.get('description')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return False
    
    print("-" * 40)
    print("‚úÖ –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞")
    return True

if __name__ == "__main__":
    success = reset_bot()
    if not success:
        print("‚ùå –°–±—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è")
        exit(1)
    else:
        print("‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!") 