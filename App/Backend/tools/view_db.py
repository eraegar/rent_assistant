#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite
"""
import sqlite3
import json
from datetime import datetime

def view_database():
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('test.db')
        cursor = conn.cursor()
        
        print("=" * 60)
        print("üìä –°–û–î–ï–†–ñ–ò–ú–û–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        tables = cursor.fetchall()
        
        print(f"\nüóÇÔ∏è  –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        for table in tables:
            print(f"   - {table[0]}")
        
        # –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –∫–∞–∂–¥—É—é —Ç–∞–±–ª–∏—Ü—É
        for table_name in [t[0] for t in tables]:
            print(f"\n" + "=" * 60)
            print(f"üìã –¢–ê–ë–õ–ò–¶–ê: {table_name.upper()}")
            print("=" * 60)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute(f"PRAGMA table_info({table_name})")
            columns = cursor.fetchall()
            
            print("\nüèóÔ∏è  –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:")
            for col in columns:
                print(f"   {col[1]} ({col[2]}) {'- PRIMARY KEY' if col[5] else ''}")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            cursor.execute(f"SELECT * FROM {table_name}")
            rows = cursor.fetchall()
            
            print(f"\nüìä –ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(rows)}")
            
            if rows:
                print("\nüìÑ –î–∞–Ω–Ω—ã–µ:")
                column_names = [col[1] for col in columns]
                
                for i, row in enumerate(rows, 1):
                    print(f"\n   üî¢ –ó–∞–ø–∏—Å—å #{i}:")
                    for j, value in enumerate(row):
                        col_name = column_names[j]
                        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
                        if col_name in ['password_hash']:
                            print(f"      {col_name}: [–ó–ê–®–ò–§–†–û–í–ê–ù]")
                        elif col_name in ['created_at', 'updated_at'] and value:
                            try:
                                # –ü–æ–ø—ã—Ç–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã
                                print(f"      {col_name}: {value}")
                            except:
                                print(f"      {col_name}: {value}")
                        else:
                            print(f"      {col_name}: {value}")
            else:
                print("   üì≠ –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è")
        
        conn.close()
        print(f"\n" + "=" * 60)
        print("‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("=" * 60)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    view_database() 