#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è "–æ–¥–∏–Ω –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞"
"""
import sqlite3
import os
import requests
import json

# Connect to database
current_dir = os.path.dirname(os.path.abspath(__file__))
db_path = os.path.abspath(os.path.join(current_dir, '..', 'test.db'))

print("=== –¢–ï–°–¢: –û–î–ò–ù –ê–°–°–ò–°–¢–ï–ù–¢ –ù–ê –ö–õ–ò–ï–ù–¢–ê ===")
print()

# 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
conn = sqlite3.connect(db_path)
cursor = conn.cursor()

print("1. –¢–µ–∫—É—â–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤:")
cursor.execute("""
    SELECT 
        ca.client_id,
        u_client.name as client_name,
        ca.assistant_id,
        u_assistant.name as assistant_name,
        ca.status
    FROM client_assistant_assignments ca
    JOIN client_profiles cp ON ca.client_id = cp.id
    JOIN users u_client ON cp.user_id = u_client.id
    JOIN assistant_profiles ap ON ca.assistant_id = ap.id
    JOIN users u_assistant ON ap.user_id = u_assistant.id
    WHERE ca.status = 'active'
    ORDER BY ca.client_id
""")

assignments = cursor.fetchall()
for assignment in assignments:
    client_id, client_name, assistant_id, assistant_name, status = assignment
    print(f"  –ö–ª–∏–µ–Ω—Ç {client_id} ({client_name}) ‚Üí –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç {assistant_id} ({assistant_name})")

print()

# 2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ (–∫–ª–∏–µ–Ω—Ç—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞–º–∏)
print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π (–∫–ª–∏–µ–Ω—Ç—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞–º–∏):")
cursor.execute("""
    SELECT 
        client_id,
        COUNT(*) as assistant_count
    FROM client_assistant_assignments 
    WHERE status = 'active'
    GROUP BY client_id
    HAVING COUNT(*) > 1
""")

violations = cursor.fetchall()
if violations:
    print("  ‚ùå –ù–ê–ô–î–ï–ù–´ –ù–ê–†–£–®–ï–ù–ò–Ø:")
    for violation in violations:
        client_id, count = violation
        print(f"    –ö–ª–∏–µ–Ω—Ç {client_id} –∏–º–µ–µ—Ç {count} –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤!")
else:
    print("  ‚úÖ –ù–∞—Ä—É—à–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - —É –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –º–∞–∫—Å–∏–º—É–º 1 –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç")

print()

# 3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å API —ç–Ω–¥–ø–æ–∏–Ω—Ç (—Å–∏–º—É–ª—è—Ü–∏—è)
print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:")

# –ù–∞–π–¥–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –±–µ–∑ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
cursor.execute("""
    SELECT cp.id, u.name
    FROM client_profiles cp
    JOIN users u ON cp.user_id = u.id
    LEFT JOIN client_assistant_assignments caa ON cp.id = caa.client_id AND caa.status = 'active'
    WHERE caa.id IS NULL
    LIMIT 1
""")

unassigned_client = cursor.fetchone()

# –ù–∞–π–¥–µ–º –∫–ª–∏–µ–Ω—Ç–∞ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
cursor.execute("""
    SELECT cp.id, u.name
    FROM client_profiles cp
    JOIN users u ON cp.user_id = u.id
    JOIN client_assistant_assignments caa ON cp.id = caa.client_id AND caa.status = 'active'
    LIMIT 1
""")

assigned_client = cursor.fetchone()

if unassigned_client:
    client_id, client_name = unassigned_client
    print(f"  ‚úÖ –ö–ª–∏–µ–Ω—Ç –±–µ–∑ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {client_id} ({client_name}) - –º–æ–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å")

if assigned_client:
    client_id, client_name = assigned_client
    print(f"  ‚ö†Ô∏è  –ö–ª–∏–µ–Ω—Ç —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º: {client_id} ({client_name}) - –¥–æ–ª–∂–µ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ")

print()

# 4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
print("4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
cursor.execute("SELECT COUNT(*) FROM client_profiles")
total_clients = cursor.fetchone()[0]

cursor.execute("SELECT COUNT(DISTINCT client_id) FROM client_assistant_assignments WHERE status = 'active'")
assigned_clients = cursor.fetchone()[0]

print(f"  –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {total_clients}")
print(f"  –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞–º–∏: {assigned_clients}")
print(f"  –ö–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤: {total_clients - assigned_clients}")

conn.close()

print()
print("=== –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê ===")
if violations:
    print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –ù–∞–π–¥–µ–Ω—ã –∫–ª–∏–µ–Ω—Ç—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞–º–∏")
    print("   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ")
else:
    print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–æ–±–ª—é–¥–∞–µ—Ç—Å—è")
    print("   –ö–∞–∂–¥—ã–π –∫–ª–∏–µ–Ω—Ç –∏–º–µ–µ—Ç –º–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")

print()
print("üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ backend:")
print("   cd app && python main.py")
print()
print("   –ó–∞—Ç–µ–º –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ manager-app") 