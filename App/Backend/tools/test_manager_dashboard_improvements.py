#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞:
1) —É–±—Ä–∞–Ω–∞ –ø–∞–Ω–µ–ª—å "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–¥–∞—á–∏" –≤ –æ–∫–Ω–µ –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ "–õ–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é" —Ç–µ–ª–µ–≥—Ä–∞–º –∞–ª–∏–∞—Å
2) —É–±—Ä–∞–Ω –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å "–£—Ä–æ–≤–µ–Ω—å –∫–æ–Ω–≤–µ—Ä—Å–∏–∏"
3) –¥–æ–±–∞–≤–ª–µ–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–µ—Å—è –æ–∫–Ω–æ —Å –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–ª–∏–µ–Ω—Ç–µ —Å –µ–≥–æ –Ω–æ–º–µ—Ä–æ–º, –ø–æ—á—Ç–æ–π(–µ—Å–ª–∏ –µ—Å—Ç—å), —Ç–µ–ª–µ–≥—Ä–∞–º –∞–ª–∏–∞—Å–æ–º –∏ —É–±—Ä–∞–Ω —Å—Ç–æ–ª–±–µ—Ü "–ö–æ–Ω—Ç–∞–∫—Ç—ã" –≤ –ø–∞–Ω–µ–ª–∏ "–ö–ª–∏–µ–Ω—Ç—ã"
4) —É–±—Ä–∞–Ω –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –º–µ—Å—è—á–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
"""

import sys
import os
import requests
import json

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database import SessionLocal
import models


def get_manager_token():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    login_data = {
        "phone": "+79999999999",
        "password": "admin123"
    }
    
    response = requests.post("http://localhost:8000/api/v1/management/auth/login", json=login_data)
    if response.status_code == 200:
        return response.json()["access_token"]
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {response.status_code}")
        print(response.text)
        return None


def test_overview_analytics(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±–∑–æ—Ä–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–±—Ä–∞–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏)"""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–∑–æ—Ä–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get("http://localhost:8000/api/v1/management/dashboard/overview", headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:")
        print(f"   üìã –ó–∞–¥–∞—á: {data['tasks']['total']} (–Ω–æ–≤—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: {data['tasks']['new_this_week']})")
        print(f"   üë• –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã: {data['assistants']['online_now']}/{data['assistants']['total_active']} –æ–Ω–ª–∞–π–Ω")
        print(f"   üßë‚Äçüíº –ö–ª–∏–µ–Ω—Ç—ã: {data['clients']['total_active']} (–Ω–æ–≤—ã—Ö: {data['clients']['new_this_week']})")
        print(f"   üí∞ –ú–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥: {data['performance']['monthly_revenue']:,} ‚ÇΩ")
        print(f"   üìà –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á: {data['performance']['task_completion_rate']}%")
        print(f"   üîß –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤: {data['performance']['assistant_utilization']}%")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –¥–æ—Ö–æ–¥–∞
        performance_keys = list(data['performance'].keys())
        revenue_keys = [key for key in performance_keys if 'revenue' in key.lower()]
        print(f"   ‚úÖ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –¥–æ—Ö–æ–¥–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω): {revenue_keys}")
        
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {response.status_code}")
        return False


def test_clients_list(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–±—Ä–∞–Ω —Å—Ç–æ–ª–±–µ—Ü '–ö–æ–Ω—Ç–∞–∫—Ç—ã')"""
    print("\nüë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤...")
    
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get("http://localhost:8000/api/v1/management/clients", headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        clients = data.get('clients', [])
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {len(clients)}")
        
        if clients:
            client = clients[0]
            print(f"   üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞:")
            print(f"   ‚Ä¢ ID: {client.get('id')}")
            print(f"   ‚Ä¢ –ò–º—è: {client.get('name')}")
            print(f"   ‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {client.get('phone')}")
            print(f"   ‚Ä¢ Email: {client.get('email', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
            print(f"   ‚Ä¢ Telegram: @{client.get('telegram_username', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
            print(f"   ‚Ä¢ –ó–∞–¥–∞—á: {client.get('total_tasks')} (–∞–∫—Ç–∏–≤–Ω—ã—Ö: {client.get('active_tasks')})")
            print(f"   ‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞: {client.get('subscription', {}).get('plan', '–Ω–µ—Ç') if client.get('subscription') else '–Ω–µ—Ç'}")
            print(f"   ‚Ä¢ –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã: {len(client.get('assigned_assistants', []))}")
        
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤: {response.status_code}")
        return False


def test_client_profile_data(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞...")
    
    # –ù–∞–π–¥–µ–º –∫–ª–∏–µ–Ω—Ç–∞ —Å telegram username –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db = SessionLocal()
    try:
        client_with_telegram = db.query(models.User).filter(
            models.User.role == models.UserRole.client,
            models.User.telegram_username.isnot(None)
        ).first()
        
        if client_with_telegram:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∫–ª–∏–µ–Ω—Ç —Å Telegram: {client_with_telegram.name}")
            print(f"   ‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {client_with_telegram.phone}")
            print(f"   ‚Ä¢ Telegram: @{client_with_telegram.telegram_username}")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º —á–µ—Ä–µ–∑ API
            headers = {"Authorization": f"Bearer {token}"}
            response = requests.get("http://localhost:8000/api/v1/management/clients", headers=headers)
            
            if response.status_code == 200:
                data = response.json()
                clients = data.get('clients', [])
                
                # –ù–∞–π–¥–µ–º —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –æ—Ç–≤–µ—Ç–µ API
                api_client = next((c for c in clients if c['id'] == client_with_telegram.client_profile.id), None)
                
                if api_client:
                    print(f"   üìã –î–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API:")
                    print(f"   ‚Ä¢ ID: {api_client['id']}")
                    print(f"   ‚Ä¢ –ò–º—è: {api_client['name']}")
                    print(f"   ‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {api_client['phone']}")
                    print(f"   ‚Ä¢ Email: {api_client.get('email', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
                    print(f"   ‚Ä¢ Telegram: @{api_client.get('telegram_username', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
                    print(f"   ‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {api_client['created_at']}")
                    
                    if api_client.get('subscription'):
                        sub = api_client['subscription']
                        print(f"   üìÖ –ü–æ–¥–ø–∏—Å–∫–∞:")
                        print(f"     ‚Ä¢ –ü–ª–∞–Ω: {sub['plan']}")
                        print(f"     ‚Ä¢ –°—Ç–∞—Ç—É—Å: {sub['status']}")
                        print(f"     ‚Ä¢ –ù–∞—á–∞–ª–æ: {sub['started_at']}")
                        print(f"     ‚Ä¢ –û–∫–æ–Ω—á–∞–Ω–∏–µ: {sub.get('expires_at', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}")
                        print(f"     ‚Ä¢ –ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ: {sub['auto_renew']}")
                    
                    return True
                else:
                    print(f"‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ API –æ—Ç–≤–µ—Ç–µ")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
                return False
        else:
            print("‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç—ã —Å Telegram username –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return True
            
    finally:
        db.close()


def test_assistant_creation(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞...")
    
    assistant_data = {
        "name": "–¢–µ—Å—Ç–æ–≤—ã–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –£–ª—É—á—à–µ–Ω–∏–π",
        "phone": "9001234567",  # –ë–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ +7
        "email": "test-improvements@example.com",
        "password": "testpass123",
        "specialization": "full_access",
        "telegram_username": "test_improvements"
    }
    
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.post("http://localhost:8000/api/v1/management/assistants/create", 
                           json=assistant_data, headers=headers)
    
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:")
        print(f"   ‚Ä¢ ID: {result['id']}")
        print(f"   ‚Ä¢ –ò–º—è: {result['name']}")
        print(f"   ‚Ä¢ Email: {result['email']}")
        print(f"   ‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {result['specialization']}")
        print(f"   ‚Ä¢ –ü–∞—Ä–æ–ª—å: {result['password']}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∫–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        db = SessionLocal()
        try:
            assistant_user = db.query(models.User).filter(
                models.User.role == models.UserRole.assistant,
                models.User.name == assistant_data["name"]
            ).first()
            
            if assistant_user:
                print(f"   üìû –ù–æ–º–µ—Ä –≤ –ë–î: {assistant_user.phone}")
                if assistant_user.phone.startswith('+7'):
                    print(f"   ‚úÖ –ù–æ–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º +7")
                else:
                    print(f"   ‚ùå –ù–æ–º–µ—Ä –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω: {assistant_user.phone}")
                
                # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                assistant_profile = assistant_user.assistant_profile
                if assistant_profile:
                    db.delete(assistant_profile)
                db.delete(assistant_user)
                db.commit()
                print(f"   üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —É–¥–∞–ª–µ–Ω")
                
        finally:
            db.close()
        
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {response.status_code}")
        print(response.text)
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    token = get_manager_token()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞")
        return
    
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —É—Å–ø–µ—à–Ω–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã
    tests = [
        ("–û–±–∑–æ—Ä–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", test_overview_analytics),
        ("–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤", test_clients_list),
        ("–î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞", test_client_profile_data),
        ("–°–æ–∑–¥–∞–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞", test_assistant_creation),
    ]
    
    results = []
    for test_name, test_func in tests:
        try:
            result = test_func(token)
            results.append((test_name, result))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
            results.append((test_name, False))
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    
    passed = 0
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ù–ï–£–î–ê–ß–ê"
        print(f"   {status}: {test_name}")
        if result:
            passed += 1
    
    print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{len(results)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == len(results):
        print("üéâ –í—Å–µ —É–ª—É—á—à–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —É–ª—É—á—à–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏")


if __name__ == "__main__":
    main() 