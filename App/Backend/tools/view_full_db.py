import sqlite3
import os


def main():
    # –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ test.db –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
    script_dir = os.path.dirname(os.path.abspath(__file__))
    project_root = os.path.abspath(os.path.join(script_dir, '..', '..'))
    db_path = os.path.join(project_root, 'test.db')

    if not os.path.exists(db_path):
        print(f"‚ùå –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {db_path}")
        return

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
    tables = [row[0] for row in cursor.fetchall()]

    if not tables:
        print("üìÇ –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    else:
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        for table in tables:
            print(f"\n=== –¢–∞–±–ª–∏—Ü–∞: {table} ===")
            # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute(f"PRAGMA table_info({table});")
            cols = cursor.fetchall()
            col_names = [col[1] for col in cols]
            print(f"–°—Ç–æ–ª–±—Ü—ã: {col_names}")

            # –î–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute(f"SELECT * FROM {table};")
            rows = cursor.fetchall()
            print(f"–ó–∞–ø–∏—Å–µ–π: {len(rows)}")
            for idx, row in enumerate(rows, 1):
                record = dict(zip(col_names, row))
                print(f"  {idx}. {record}")

    conn.close()


if __name__ == '__main__':
    main() 