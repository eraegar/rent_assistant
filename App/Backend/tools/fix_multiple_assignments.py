#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
"""
import sqlite3
import os
from datetime import datetime

# Connect to database
current_dir = os.path.dirname(os.path.abspath(__file__))
db_path = os.path.abspath(os.path.join(current_dir, '..', 'test.db'))

print("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–• –ù–ê–ó–ù–ê–ß–ï–ù–ò–ô ===")
print()

conn = sqlite3.connect(db_path)
cursor = conn.cursor()

# 1. –ù–∞–π—Ç–∏ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è–º–∏
print("1. –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞–º–∏:")
cursor.execute("""
    SELECT 
        ca.client_id,
        u_client.name as client_name,
        COUNT(*) as assistant_count
    FROM client_assistant_assignments ca
    JOIN client_profiles cp ON ca.client_id = cp.id
    JOIN users u_client ON cp.user_id = u_client.id
    WHERE ca.status = 'active'
    GROUP BY ca.client_id, u_client.name
    HAVING COUNT(*) > 1
""")

violating_clients = cursor.fetchall()

if not violating_clients:
    print("  ‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    conn.close()
    exit()

for client_id, client_name, count in violating_clients:
    print(f"  ‚ùå –ö–ª–∏–µ–Ω—Ç {client_id} ({client_name}) –∏–º–µ–µ—Ç {count} –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤")

print()

# 2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ
print("2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π:")

for client_id, client_name, count in violating_clients:
    print(f"  –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ {client_id} ({client_name}):")
    
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è
    cursor.execute("""
        SELECT 
            ca.id,
            ca.assistant_id,
            u_assistant.name as assistant_name,
            ca.created_at
        FROM client_assistant_assignments ca
        JOIN assistant_profiles ap ON ca.assistant_id = ap.id
        JOIN users u_assistant ON ap.user_id = u_assistant.id
        WHERE ca.client_id = ? AND ca.status = 'active'
        ORDER BY ca.created_at DESC
    """, (client_id,))
    
    assignments = cursor.fetchall()
    
    # –û—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ (—Å–∞–º–æ–µ –Ω–æ–≤–æ–µ) –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–º
    latest_assignment = assignments[0]
    latest_id, latest_assistant_id, latest_assistant_name, latest_created_at = latest_assignment
    print(f"    ‚úÖ –û—Å—Ç–∞–≤–ª—è–µ–º: –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç {latest_assistant_id} ({latest_assistant_name}) - {latest_created_at}")
    
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    for assignment in assignments[1:]:
        assignment_id, assistant_id, assistant_name, created_at = assignment
        print(f"    üîÑ –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º: –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç {assistant_id} ({assistant_name}) - {created_at}")
        
        cursor.execute("""
            UPDATE client_assistant_assignments 
            SET status = 'deactivated'
            WHERE id = ?
        """, (assignment_id,))
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–¥–∞—á–∏ —ç—Ç–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å (–µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã —á–µ—Ä–µ–∑ —ç—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ)
        cursor.execute("""
            UPDATE tasks 
            SET assistant_id = NULL, status = 'pending', claimed_at = NULL
            WHERE client_id = ? AND assistant_id = ? AND status = 'in_progress'
        """, (client_id, assistant_id))
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á —É –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        cursor.execute("""
            UPDATE assistant_profiles 
            SET current_active_tasks = (
                SELECT COUNT(*) 
                FROM tasks 
                WHERE assistant_id = ? AND status = 'in_progress'
            )
            WHERE id = ?
        """, (assistant_id, assistant_id))

print()

# 3. Commit –∏–∑–º–µ–Ω–µ–Ω–∏—è
print("3. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
conn.commit()
print("  ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")

print()

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
cursor.execute("""
    SELECT 
        client_id,
        COUNT(*) as assistant_count
    FROM client_assistant_assignments 
    WHERE status = 'active'
    GROUP BY client_id
    HAVING COUNT(*) > 1
""")

remaining_violations = cursor.fetchall()

if remaining_violations:
    print("  ‚ùå –ï—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞—Ä—É—à–µ–Ω–∏—è:")
    for client_id, count in remaining_violations:
        print(f"    –ö–ª–∏–µ–Ω—Ç {client_id} –∏–º–µ–µ—Ç {count} –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤")
else:
    print("  ‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ - —É –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –º–∞–∫—Å–∏–º—É–º 1 –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç")

# 5. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
print()
print("5. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
cursor.execute("SELECT COUNT(*) FROM client_profiles")
total_clients = cursor.fetchone()[0]

cursor.execute("SELECT COUNT(DISTINCT client_id) FROM client_assistant_assignments WHERE status = 'active'")
assigned_clients = cursor.fetchone()[0]

cursor.execute("SELECT COUNT(*) FROM tasks WHERE status = 'pending' AND assistant_id IS NULL")
marketplace_tasks = cursor.fetchone()[0]

print(f"  –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {total_clients}")
print(f"  –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞–º–∏: {assigned_clients}")
print(f"  –ö–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤: {total_clients - assigned_clients}")
print(f"  –ó–∞–¥–∞—á –≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ: {marketplace_tasks}")

conn.close()

print()
print("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")
print("‚úÖ –¢–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π –∫–ª–∏–µ–Ω—Ç –∏–º–µ–µ—Ç –º–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
print()
print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
print("   python test_one_assistant_per_client.py") 